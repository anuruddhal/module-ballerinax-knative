/*
 * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

apply from: "$rootDir/gradle/javaProject.gradle"

configurations {
    bDistributionDir
    extensionPlugin
    birDir
    bJars
}

dependencies {
    implementation project(":knative-extension")

    testImplementation "org.ballerinalang:ballerina-lang:${ballerinaLangVersion}"
    testImplementation "com.github.docker-java:docker-java:${dockerJavaVersion}"
    testImplementation "io.fabric8:kubernetes-client:${fabric8KubernetesClientVersion}"
    testImplementation "me.snowdrop:istio-model:${snowdropIstioModelVersion}"
    testImplementation "io.fabric8:knative-client:${fabric8KnativeClientVersion}"
    testImplementation "org.slf4j:slf4j-api:${slf4jVersion}"
    testImplementation "org.slf4j:slf4j-log4j12:${slf4jVersion}"
    testImplementation "org.testng:testng:${testngVersion}"

    extensionPlugin project(path: ":knative-extension", configuration: "shadow")
    bDistributionDir project(path: ":knative-extension-annotations", configuration: "bDistributionDir")
    birDir project(path: ":knative-extension-annotations", configuration: "birDir")
    bJars project(path: ":knative-extension-annotations", configuration: "knativeJar")
}

description = 'Ballerinax - Knative Extension Tests'

def distributionLocation = configurations.bDistributionDir.singleFile

task copyExtensionPlugin {
    dependsOn configurations.extensionPlugin
    doLast {
        copy {
            from configurations.extensionPlugin
            into file("${distributionLocation}/bre/lib/")
        }
    }
}

task copyBallerinaArtifacts {
    dependsOn configurations.birDir
    dependsOn configurations.bJars
    doLast {
        copy {
            from configurations.birDir
            into file("${distributionLocation}/bir-cache/ballerinax")
        }
        configurations.bJars.each { jar ->
            copy {
                from jar
                into file("${distributionLocation}/bre/lib/")
            }
        }
    }
}

task prepareDistribution {
    dependsOn copyExtensionPlugin
    dependsOn copyBallerinaArtifacts
}

test {
    dependsOn prepareDistribution
    useTestNG() {
        if (project.hasProperty('Travis')) {
            suites 'src/test/resources/testng-travis.xml'
        } else {
            suites 'src/test/resources/testng.xml'
        }
        systemProperties = [
            sampleDir: System.getProperty('sampleDir', project.projectDir.absolutePath + "/../samples"),
            ballerinaPack: System.getProperty('ballerinaPack', "$configurations.bDistributionDir.singleFile.absolutePath"),
            jacocoAgentLine: "-javaagent:${configurations.jacocoRuntime.asPath}=destfile=${test.jacoco.destinationFile.absolutePath},append=true,inclnolocationclasses=true"
        ]
	}
}

// Disable publishing artifacts
tasks.withType(PublishToMavenRepository) {
    enabled = false
}
tasks.withType(PublishToMavenLocal) {
    enabled = false
}
